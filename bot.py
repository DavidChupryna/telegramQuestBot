import random

import telebot
from telebot.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove

from info import bot_responses, locations, back_on_road
from data import load_user_data, save_user_data


token = '6490053327:AAEMjdralHZNF63fwQV5UK7VPeyNcIFxfus'
bot = telebot.TeleBot(token=token)

data_path = 'users.json'
user_data = load_user_data(data_path)


def create_two_button(btn1, btn2):
    keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
    keyboard.add(telebot.types.KeyboardButton(btn1))
    keyboard.add(telebot.types.KeyboardButton(btn2))
    return keyboard


def create_three_button(btn1, btn2, btn3):
    keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
    keyboard.add(telebot.types.KeyboardButton(btn1))
    keyboard.add(telebot.types.KeyboardButton(btn2))
    keyboard.add(telebot.types.KeyboardButton(btn3))
    return keyboard


def create_four_button(btn1, btn2, btn3, btn4):
    keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
    keyboard.add(telebot.types.KeyboardButton(btn1))
    keyboard.add(telebot.types.KeyboardButton(btn2))
    keyboard.add(telebot.types.KeyboardButton(btn3))
    keyboard.add(telebot.types.KeyboardButton(btn4))
    return keyboard


def create_character(user_id):
    user_data[user_id]['money'] = 0
    user_data[user_id]['weapon'] = ""
    user_data[user_id]['magic'] = False
    save_user_data(user_data, data_path)


@bot.message_handler(commands=['start'])
def say_start(message):
    bot.send_message(message.chat.id, f"{random.choice(bot_responses['hello'])}.\n"
                                      f"–¢—ã –ø–æ–ø–∞–ª –Ω–∞ —Ç–µ—Å—Ç –ø–æ –±–∞–∑–æ–≤–æ–º—É Python. \n"
                                      f"–î–ª—è –ø–æ–ª–Ω–æ–≥–æ –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è —Å –±–æ—Ç–æ–º –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: /help\n"
                                      f"–î–ª—è –Ω–∞—á–∞–ª–∞ —Ç–µ—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /quest")


@bot.message_handler(commands=['quest'])
def create_user(message):
    user_id = str(message.from_user.id)
    if user_id not in user_data:
        user_data[user_id] = {}
        user_data[user_id]['username'] = message.from_user.first_name

        create_character(user_id)
        print(user_id)
        print(user_data)
    elif user_id in user_data:
        create_character(user_id)
        bot.send_message(message.chat.id, f"{message.from_user.first_name} —Ä–∞–¥ –≤–∞—Å —Å–Ω–æ–≤–∞ –≤–∏–¥–µ—Ç—å,"
                                          f"–ú–æ–Ω–µ—Ç—ã: {user_data[user_id]['money']} –û—Ä—É–∂–∏–µ: {user_data[user_id]['weapon']}")

    location_one(message.chat.id)


def location_one(chat_id):
    keyboard = create_three_button(locations["kingdom_light"]["name"],
                                   locations["kingdom_dark"]["name"],
                                   locations["kingdom_magic"]["name"])
    bot.send_photo(chat_id, locations["road"]["image"])
    bot.send_message(chat_id, f"{locations["road"]["name"]}: \n"
                                      f"{locations["road"]["descriptions"]}.\n"
                              f"–í—ã–±–µ—Ä–∏ —Å–≤–æ–π –ø—É—Ç—å!", reply_markup=keyboard)


@bot.message_handler(func=lambda message: message.text in [locations["kingdom_light"]["name"],
                                                           locations["kingdom_dark"]["name"],
                                                           locations["kingdom_magic"]["name"]])
def location_two(message):
    if message.text == locations["kingdom_light"]["name"]:
        keyboard = create_two_button(locations['light_city']['name'], locations['fruit_gardens']['name'])
        bot.send_photo(message.chat.id, locations["kingdom_light"]["image"])
        bot.send_message(message.chat.id, f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ {locations['kingdom_light']['name']}\n"
                                          f"{locations['kingdom_light']['descriptions']}")
        bot.send_message(message.chat.id, f"–í—ã–±–µ—Ä–∏ –∫—É–¥–∞ –ø–æ–π—Ç–∏ –¥–∞–ª—å—à–µ? \n"
                                          f"{locations['light_city']['name']}\n"
                                          f"{locations['fruit_gardens']['name']}", reply_markup=keyboard)

    elif message.text == locations["kingdom_dark"]["name"]:
        keyboard = create_two_button(locations["dark_tunnel"]["name"], back_on_road)
        bot.send_photo(message.chat.id, locations["kingdom_dark"]["image"])
        bot.send_message(message.chat.id, f"–¢—ã –ø–æ–ø–∞–ª –≤ {locations['kingdom_dark']['name']}\n"
                                          f"{locations['kingdom_dark']['descriptions']}")
        bot.send_message(message.chat.id, "–í–ø–µ—Ä–µ–¥–∏ —Ç–µ–±—è –∂–¥—É—Ç —Ç–µ–º–Ω—ã–µ —Ç—É–Ω–µ–ª–ª–∏. –¢—ã –≥–æ—Ç–æ–≤?", reply_markup=keyboard)

    elif message.text == locations["kingdom_magic"]["name"]:
        keyboard = create_two_button(locations['witch_city']['name'], locations['illusion_forest']['name'])
        bot.send_photo(message.chat.id, locations["kingdom_magic"]["image"])
        bot.send_message(message.chat.id, f"–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç {locations['kingdom_magic']['name']}\n"
                                          f"{locations['kingdom_magic']['descriptions']}")
        bot.send_message(message.chat.id, f"–í—ã–±–µ—Ä–∏ –∫—É–¥–∞ –ø–æ–π—Ç–∏ –¥–∞–ª—å—à–µ? \n"
                                          f"{locations['witch_city']['name']}\n"
                                          f"{locations['illusion_forest']['name']}", reply_markup=keyboard)


@bot.message_handler(func=lambda message: message.text in [locations['light_city']['name'],
                                                           locations['fruit_gardens']['name']])
def location_light(message):
    if message.text == locations['light_city']['name']:
        keyboard = create_four_button(locations['light_city']['city_jobs'][0]['name'],
                                      locations['light_city']['city_jobs'][1]['name'],
                                      locations['light_city']['city_jobs'][2]['name'],
                                      back_on_road)

        bot.send_photo(message.chat.id, locations["light_city"]["image"])
        bot.send_message(message.chat.id, f"{locations['light_city']['descriptions']}\n"
                                               f"–¢—ã –º–æ–∂–µ—à—å —Ö–æ—Ä–æ—à–æ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥:\n"
                                               f"- {locations['light_city']['city_jobs'][0]['name']}\n"
                                               f"- {locations['light_city']['city_jobs'][1]['name']}\n"
                                               f"- {locations['light_city']['city_jobs'][2]['name']}", reply_markup=keyboard)

    elif message.text == locations['fruit_gardens']['name']:
        keyboard = create_four_button(locations['fruit_gardens']['garden_jobs'][0]['name'],
                                      locations['fruit_gardens']['garden_jobs'][1]['name'],
                                      locations['fruit_gardens']['garden_jobs'][2]['name'],
                                      back_on_road)

        bot.send_photo(message.chat.id, locations["fruit_gardens"]["image"])
        bot.send_message(message.chat.id, f"{locations['fruit_gardens']['descriptions']}\n"
                                          f"–í —Å–∞–¥—É —Ç–µ–±—è –ø–æ–ø—Ä–æ—Å–∏–ª–∏ –ø–æ–º–æ—á—å –∑–∞ –¥–µ–Ω–µ–∂–Ω—É—é –ø–ª–∞—Ç—É.", reply_markup=keyboard)


@bot.message_handler(func=lambda message: message.text in [locations['light_city']['city_jobs'][0]['name'],
                                                           locations['light_city']['city_jobs'][1]['name'],
                                                           locations['light_city']['city_jobs'][2]['name'],
                                                           back_on_road])
def city_jobs_or_back(message):
    user_id = str(message.from_user.id)
    if message.text == locations['light_city']['city_jobs'][0]['name']:
        user_data[user_id]['money'] += 200
        bot.send_photo(message.chat.id, locations['light_city']['city_jobs'][0]['image'])
        bot.send_message(message.chat.id, f"–¢—ã –±–ª–∞–≥–æ–ø–æ–ª—É—á–Ω–æ –∑–∞—â–∏—Ç–∏–ª –∫–∞—Ä–∞–≤–∞–Ω –æ—Ç –±–∞–Ω–¥–∏—Ç–æ–≤‚öîÔ∏è! –î–µ—Ä–∂–∏ 200 –º–æ–Ω–µ—Ç!\n"
                                          f"–£ —Ç–µ–±—è - {user_data[user_id]['money']} –º–æ–Ω–µ—Çüí∞.")

    elif message.text == locations['light_city']['city_jobs'][1]['name']:
        user_data[user_id]['money'] += 50
        bot.send_photo(message.chat.id, locations['light_city']['city_jobs'][1]['image'])
        bot.send_message(message.chat.id, f"–¢—ã —Ö–æ—Ä–æ—à–æ –≤—ã–ø–æ–ª–Ω–∏–ª —Ä–∞–±–æ—Ç—É —Ä–µ–º–µ—Å–ª–µ–Ω–∏–∫–∞, –¥–µ—Ä–∂–∏ 50 –º–æ–Ω–µ—Ç!\n"
                                          f"–£ —Ç–µ–±—è - {user_data[user_id]['money']} –º–æ–Ω–µ—Çüí∞.")

    elif message.text == locations['light_city']['city_jobs'][2]['name']:
        user_data[user_id]['money'] += 100
        bot.send_photo(message.chat.id, locations['light_city']['city_jobs'][2]['image'])
        bot.send_message(message.chat.id, f"–¢—ã –º–æ–ª–æ–¥–µ—Ü! –ü—Ä–∞–∑–¥–Ω–∏–∫ –±—ã–ª –∑–∞–º–µ—á–∞—Ç–µ–ª–µ–Ω, –º–µ—Å—Ç–Ω—ã–µ –∂–∏—Ç–µ–ª–µ –≤ –≤–æ—Å—Ç–æ—Ä–≥–µ! "
                                          f"–î–µ—Ä–∂–∏ —Ç–≤–æ–∏ 100 –º–æ–Ω–µ—Ç!\n–£ —Ç–µ–±—è - {user_data[user_id]['money']} –º–æ–Ω–µ—Çüí∞.")

    elif message.text == back_on_road:
        location_one(message.chat.id)

    if user_data[user_id]['money'] > 500:
        bot.send_message(message.chat.id, f"–¢—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç —á—Ç–æ–±—ã –ø—Ä–∏–∫—É–ø–∏—Ç—å —Å–µ–±–µ —á—Ç–æ-–Ω–∏–±—É–¥—å. "
                                          f"–û—Ç–ø—Ä–∞–≤–ª—è–π—Å—è –≤ {locations["kingdom_magic"]["name"]} –∏ –ø–æ—Å–µ—Ç–∏ –º–µ—Å—Ç–Ω–æ–≥–æ —Ç–æ—Ä–≥–æ–≤—Ü–∞.")
    save_user_data(user_data, data_path)


@bot.message_handler(func=lambda message: message.text in [locations['fruit_gardens']['garden_jobs'][0]['name'],
                                                           locations['fruit_gardens']['garden_jobs'][1]['name'],
                                                           locations['fruit_gardens']['garden_jobs'][2]['name'],
                                                           back_on_road])
def garden_jobs_or_back(message):
    user_id = str(message.from_user.id)
    if message.text == locations['fruit_gardens']['garden_jobs'][0]['name']:
        user_data[user_id]['money'] += 50
        bot.send_photo(message.chat.id, locations['fruit_gardens']['garden_jobs'][0]['image'])
        bot.send_message(message.chat.id, f"–¢—ã —Å–æ–±—Ä–∞–ª –≤—Å–µ –ø–æ–ª–µ–∑–Ω—ã–µ —Ç—Ä–∞–≤—ã‚òòÔ∏è! –î–µ—Ä–∂–∏ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –≤ –≤–∏–¥–µ 50 –º–æ–Ω–µ—Ç.\n"
                                          f"–£ —Ç–µ–±—è - {user_data[user_id]['money']} –º–æ–Ω–µ—Çüí∞.")

    elif message.text == locations['fruit_gardens']['garden_jobs'][1]['name']:
        user_data[user_id]['money'] += 75
        bot.send_photo(message.chat.id, locations['fruit_gardens']['garden_jobs'][1]['image'])
        bot.send_message(message.chat.id, f"–ù–∞–¥–æ –∂–µ! –ù–µ –µ–¥–∏–Ω–æ–≥–æ —Å–æ—Ä–Ω—è–∫–∞! –î–µ—Ä–∂–∏ —á–µ—Å—Ç–Ω–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ 75 –º–æ–Ω–µ—Ç.\n"
                                          f"–£ —Ç–µ–±—è - {user_data[user_id]['money']} –º–æ–Ω–µ—Çüí∞.")

    elif message.text == locations['fruit_gardens']['garden_jobs'][2]['name']:
        user_data[user_id]['money'] += 100
        bot.send_photo(message.chat.id, locations['fruit_gardens']['garden_jobs'][2]['image'])
        bot.send_message(message.chat.id, f"–¢—ã —Å–¥–µ–ª–∞–ª –±–æ–ª—å—à–æ–µ –¥–µ–ª–æüå≤, –¥–µ—Ä–∂–∏ —Å–≤–æ–∏ 100 –º–æ–Ω–µ—Ç.\n"
                                          f"–£ —Ç–µ–±—è - {user_data[user_id]['money']} –º–æ–Ω–µ—Çüí∞.")

    elif message.text == back_on_road:
        location_one(message.chat.id)

    if user_data[user_id]['money'] > 500:
        bot.send_message(message.chat.id, f"–¢—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç —á—Ç–æ–±—ã –ø—Ä–∏–∫—É–ø–∏—Ç—å —Å–µ–±–µ —á—Ç–æ-–Ω–∏–±—É–¥—å. "
                                          f"–û—Ç–ø—Ä–∞–≤–ª—è–π—Å—è –≤ {locations["kingdom_magic"]["name"]} –∏ –ø–æ—Å–µ—Ç–∏ –º–µ—Å—Ç–Ω–æ–≥–æ —Ç–æ—Ä–≥–æ–≤—Ü–∞.")
    save_user_data(user_data, data_path)


@bot.message_handler(func=lambda message: message.text in [locations['witch_city']['name'], locations['illusion_forest']['name']])
def location_magic(message):
    if message.text == locations['witch_city']['name']:
        keyboard = create_two_button(locations['weapon_shop']['name'], back_on_road)
        bot.send_photo(message.chat.id, locations['witch_city']['image'])
        bot.send_message(message.chat.id, f"–¢—ã –ø–æ–ø–∞–ª –≤ {locations['witch_city']['name']}\n"
                                          f"{locations['witch_city']['descriptions']}\n"
                                          f"–ü–æ—Å–µ—Ç–∏—à—å –æ—Ä—É–∂–µ–π–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω?", reply_markup=keyboard)

    elif message.text == locations['illusion_forest']['name']:
        keyboard = create_two_button('–î–∞', back_on_road)
        bot.send_photo(message.chat.id, locations['illusion_forest']['image'])
        bot.send_message(message.chat.id, f"–¢—ã –ø–æ–ø–∞–ª –≤ {locations['illusion_forest']['name']}\n"
                                          f"{locations['illusion_forest']['descriptions']}", reply_markup=keyboard)
        bot.send_message(message.chat.id, "–ù–∞ –¥–µ—Ä–µ–≤–µ —Ç—ã —É–≤–∏–¥–µ–ª —Å–∏–¥—è—â–µ–≥–æ –∫–æ—Ç–∞, –ø–æ–¥–æ–π—Ç–∏ –∫ –Ω–µ–º—É?")


@bot.message_handler(func=lambda message: message.text in [locations['weapon_shop']['name'], back_on_road])
def weapon_shop(message):
    user_id = str(message.from_user.id)
    if user_data[user_id]['money'] < 500:
        bot.send_message(message.chat.id, f"–£ —Ç–µ–±—è –æ—á–µ–Ω—å –º–∞–ª–æ –º–æ–Ω–µ—Ç, —á—Ç–æ–±—ã —á—Ç–æ-—Ç–æ –∫—É–ø–∏—Ç—å.\n "
                                          f"–ù–æ —Ç—ã –º–æ–∂–µ—à—å –ø–æ—Å–µ—Ç–∏—Ç—å {locations["kingdom_light"]["name"]} –∏ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å —Ç–∞–º.")
    elif user_data[user_id]['money'] > 500:
        if message.text == locations['weapon_shop']['name']:
            keyboard = create_four_button(locations['weapon_shop']["weapons"][0]["name"],
                                          locations['weapon_shop']["weapons"][1]["name"],
                                          locations['weapon_shop']["weapons"][2]["name"],
                                          back_on_road)
            bot.send_photo(message.chat.id, locations['weapon_shop']["image"])
            bot.send_message(message.chat.id, locations['weapon_shop']['descriptions'], reply_markup=keyboard)

        elif message.text == back_on_road:
            location_one(message.chat.id)


@bot.message_handler(func=lambda message: message.text in [locations['weapon_shop']["weapons"][0]["name"],
                                                           locations['weapon_shop']["weapons"][1]["name"],
                                                           locations['weapon_shop']["weapons"][2]["name"],
                                                           back_on_road])
def buy_weapon(message):
    user_id = str(message.from_user.id)
    if message.text == locations['weapon_shop']["weapons"][0]["name"]:
        if user_data[user_id]['money'] < 400:
            bot.send_message(message.chat.id, "–£ —Ç–µ–±—è –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç!")
        else:
            bot.send_photo(message.chat.id, locations['weapon_shop']["weapons"][0]["image"])
            bot.send_message(message.chat.id, f'–¢—ã –∫—É–ø–∏–ª {locations['weapon_shop']["weapons"][0]["name"]}üó°\n')
            user_data[user_id]['weapon'] = locations['weapon_shop']["weapons"][0]["name"]
            user_data[user_id]['money'] -= 400

    elif message.text == locations['weapon_shop']["weapons"][1]["name"]:
        if user_data[user_id]['money'] < 500:
            bot.send_message(message.chat.id, "–£ —Ç–µ–±—è –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç!")
        else:
            bot.send_photo(message.chat.id, locations['weapon_shop']["weapons"][1]["image"])
            bot.send_message(message.chat.id, f'–¢—ã –∫—É–ø–∏–ª {locations['weapon_shop']["weapons"][1]["name"]}ü™ì\n')
            user_data[user_id]['weapon'] = locations['weapon_shop']["weapons"][1]["name"]
            user_data[user_id]['money'] -= 500

    elif message.text == locations['weapon_shop']["weapons"][2]["name"]:
        if user_data[user_id]['money'] < 300:
            bot.send_message(message.chat.id, "–£ —Ç–µ–±—è –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç!")
        else:
            bot.send_photo(message.chat.id, locations['weapon_shop']["weapons"][2]["image"])
            bot.send_message(message.chat.id, f'–¢—ã –∫—É–ø–∏–ª {locations['weapon_shop']["weapons"][2]["name"]}\n')
            user_data[user_id]['weapon'] = locations['weapon_shop']["weapons"][2]["name"]
            user_data[user_id]['money'] -= 300

    if message.text == back_on_road:
        location_one(message.chat.id)

    save_user_data(user_data, data_path)
    print(user_data)


@bot.message_handler(func=lambda message: message.text in ['–î–∞', back_on_road])
def magic_cat(message):

    if message.text == '–î–∞':
        keyboard = create_four_button(locations['illusion_forest']['cat']["wrong_answers"][0],
                                      locations['illusion_forest']['cat']["wrong_answers"][1],
                                      locations['illusion_forest']['cat']["true_answer"],
                                      back_on_road)
        bot.send_photo(message.chat.id, locations['illusion_forest']['cat']["image"])
        bot.send_message(message.chat.id, "–ö–æ—Ç –∑–∞–≥–∞–¥—ã–≤–∞–µ—Ç —Ç–µ–±–µ –∑–∞–¥–∫—É, –∑–∞ –∫–æ—Ç–æ—Ä—É—é –ø—Ä–µ–¥–ª–æ–≥–∞–µ—Ç —Ü–µ–Ω–Ω—ã–π –¥–ª—è —Ç–µ–±—è –ø—Ä–∏–∑."
                                          "–ü—Ä–∏–∑ - –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —É—Å–º–∏—Ä–∏—Ç—å –ø–∞—É–∫–∞ –≤ –¢–µ–º–Ω—ã—Ö —Ç—É–Ω–µ–ª—è—Ö!")
        bot.send_message(message.chat.id, locations['illusion_forest']['cat']["riddle"], reply_markup=keyboard)

    elif message.text == back_on_road:
        location_one(message.chat.id)


@bot.message_handler(func=lambda message: message.text in [locations['illusion_forest']['cat']["wrong_answers"][0],
                                                           locations['illusion_forest']['cat']["wrong_answers"][1],
                                                           locations['illusion_forest']['cat']["true_answer"]])
def solve_riddle(message):
    user_id = str(message.from_user.id)
    if message.text in locations['illusion_forest']['cat']["wrong_answers"]:
        bot.send_message(message.chat.id, "–¢—ã –Ω–µ —É–≥–∞–¥–∞–ª –∏ –∫–æ—Ç –æ—Ç–ø—Ä–∞–≤–∏–ª —Ç–µ–±—è –∏—Å–∫–∞—Ç—å –æ—Ç–≤–µ—Ç –¥–∞–ª—å—à–µ!")
        location_one(message.chat.id)
    elif message.text == locations['illusion_forest']['cat']["true_answer"]:
        bot.send_message(message.chat.id, "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —Ç—ã –æ–¥–≥–∞–¥–∞–ª –∑–∞–≥–∞–¥–∫—É –∏ –∫–æ—Ç –Ω–∞—à–µ–ø—Ç–∞–ª —Ç–µ–±–µ –Ω–∞ —É—Ö–æ —Ç–æ —Å–∞–º–æ–µ - "
                                          "–æ—á–µ–Ω—å –≤–∞–∂–Ω–æ–µ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–µü™Ñ")
        user_data[user_id]['magic'] = True
        save_user_data(user_data, data_path)

    elif message.text == back_on_road:
        location_one(message.chat.id)


@bot.message_handler(func=lambda message: message.text in [locations["dark_tunnel"]["name"], back_on_road])
def enter_to_tunnel(message):
    user_id = str(message.from_user.id)
    if message.text == locations["dark_tunnel"]["name"]:
        bot.send_photo(message.chat.id, locations["dark_tunnel"]["image"])
        bot.send_message(message.chat.id, locations["dark_tunnel"]["descriptions"])
        if not user_data[user_id]['magic']:
            keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
            keyboard.add(telebot.types.KeyboardButton(back_on_road))
            bot.send_message(message.chat.id, "–í–ø–µ—Ä–µ–¥–∏ —Ç–µ–±—è –∂–¥–µ—Ç –°—Ç—Ä–∞–∂ –ø–∞—É–∫, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ—É—è–∑–≤–∏–º –∫ —Å–∏–ª–æ–≤—ã–º —É–¥–∞—Ä–∞–º. "
                                              "–ß—Ç–æ–±—ã –µ–≥–æ —É—Å–º–∏—Ä–∏—Ç—å —Ç–µ–±–µ –Ω—É–∂–Ω–æ —Ä–∞–∑—ã—Å–∫–∞—Ç—å –∫–æ—Ç–∞ –≤ –º–∞–≥–∏—á–µ—Å–∫–æ–º –∫–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–µ!",
                                              reply_markup=keyboard)

        elif user_data[user_id]['magic']:
            bot.send_photo(message.chat.id, locations["dark_tunnel"]["spider"]['image'])
            bot.send_message(message.chat.id, "–ó–∞–∫–ª–∏–Ω–∞–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —Ç–µ–±–µ –¥–∞–ª –∫–æ—Ç –∏ –≤ –ø—Ä–∞–≤–¥—É —É—Å–º–∏—Ä–∏–ª–æ –ø–∞—É–∫–∞! "
                                              "–ì–æ—Ç–æ–≤ –∫ –±–∏—Ç–≤–µ —Å —Ç–µ–º–Ω—ã–º —Ä—ã—Ü–∞—Ä–µ–º?", reply_markup=ReplyKeyboardRemove())


@bot.message_handler(func=lambda message: message.text == 'Finish')
def say_finish(message):
    bot.send_message(message.chat.id, "finish game")

bot.polling()